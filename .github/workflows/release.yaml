# This workflow is setup to build and publish aladdin to Dockerhub
name: Push to Docker Hub

on:
  push:
    branches:
      - 'main'
    tags:
      - '*.*.*'
      - '*.*.*.*'

env:
  REGISTRY: index.docker.io
  IMAGE_NAME: fivestarsos/aladdin
  ECR_REGISTRY: 281649891004.dkr.ecr.us-east-1.amazonaws.com

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:

      - name: Check Out Repo
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      # QEMU is needed to support multi-platform builds
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: linux/amd64, linux/arm64

      - uses: werf/actions/install@v2
        with:
          version: v2.34.1

      # this will select the right tags depending on the Github event
      # master branch will build the "latest" and "main" Dockerhub tags
      # git tags will build the Dockerhub tag matching the git tag
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=tag

      - name: Configure aws credentials
        id: creds
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::281649891004:role/github-actions
          aws-region: us-east-1
          output-credentials: true

      - uses: actions/github-script@v7
        id: werf-args
        with:
          result-encoding: string
          script: |
            const tags = `${{ steps.meta.outputs.tags }}`.split('\n')

            return tags.map((tag) => `--tag ${tag}`).join(' ')

      - name: Login to ECR
        run: aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${{ env.ECR_REGISTRY }}

      - name: werf publish (ECR)
        run: |
          . $(werf ci-env github --as-file)
          werf export \
            --repo ${{ env.ECR_REGISTRY }}/%image%-cache \
            --tag ${{ env.ECR_REGISTRY }}/%image%:${{ github.sha }} \
            --tag ${{ env.ECR_REGISTRY }}/%image%:${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }} \
            --tag ${{ env.FS_REGISTRY }}/%image%:latest

      - name: werf publish
        run: |
          . $(werf ci-env github --as-file)

          werf cr login -u ${{ secrets.DOCKER_HUB_USERNAME }} -p ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }} ${{ env.REGISTRY }}

          werf export \
            --repo ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }} \
            ${{ steps.werf-args.outputs.result }}

  cleanup:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Fetch all history for all tags and branches
        run: git fetch --prune --unshallow

      - name: Cleanup
        uses: werf/actions/cleanup@v2
        with:
          version: v2.26.6
        env:
          WERF_WITHOUT_KUBE: "true"
